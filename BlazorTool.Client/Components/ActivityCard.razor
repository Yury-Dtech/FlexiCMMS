@using System.Globalization
@using BlazorTool.Client.Models
@inject IStringLocalizer<Resources.UIStrings> Loc

<div class="activity-card">
    <header class="activity-header">
        <div class="title-wrap">
            <strong class="section-title">@Loc["ActivityList_Description"]:</strong>
            <div class="activity-description" title="@Loc["ActivityDisplay_Description"]">
                @((MarkupString)Markdig.Markdown.ToHtml(Activity.Description ?? ""))
            </div>

            <div class="subline">
                <span class="badge">@Activity.ActCategory</span>
                <span class="dot">•</span>
                <time class="muted" datetime="@Activity.AddDate.ToString("o")">
                    @Activity.AddDate.ToString("dd.MM.yyyy HH:mm")
                </time>
            </div>
        </div>
    </header>

    <section class="meta">
        <span class="chip" title="@Loc["ActivityList_Workload"]">
            <svg viewBox="0 0 24 24" width="18" height="18" aria-hidden="true"><path fill="currentColor" d="M12 2a10 10 0 1 0 .001 20.001A10 10 0 0 0 12 2Zm1 5h-2v6l5 3 .999-1.732L13 11.5V7Z" /></svg>
            @Activity.WorkLoad.ToString("0.##")@Loc["ActivityList_HoursAbbreviation"]
        </span>

        <span class="chip chip--secondary" title="@Loc["ActivityList_Workers"]">
            <svg viewBox="0 0 24 24" width="18" height="18" aria-hidden="true"><path fill="currentColor" d="M16 11a4 4 0 1 0-4-4 4 4 0 0 0 4 4Zm-8 0a3 3 0 1 0-3-3 3 3 0 0 0 3 3Zm8 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4Zm-8 1c-2.21 0-6 1.12-6 3v2h6v-2c0-.74.27-1.42.74-2.02A8.06 8.06 0 0 0 8 14Z" /></svg>
            @Activity.Workers
        </span>

        @if (Activity.Cost.HasValue)
        {
            <span class="chip chip--secondary" title="Стоимость">
                <svg viewBox="0 0 24 24" width="18" height="18" aria-hidden="true"><path fill="currentColor" d="M12 4c4.418 0 8 1.79 8 4s-3.582 4-8 4-8-1.79-8-4 3.582-4 8-4Zm0 10c2.965 0 5.57-.69 7.188-1.77L19 13c0 2.21-3.582 4-8 4s-8-1.79-8-4l-.188-.77C6.43 13.31 9.035 14 12 14Zm0 4c2.965 0 5.57-.69 7.188-1.77L19 17c0 2.21-3.582 4-8 4s-8-1.79-8-4l-.188-.77C6.43 17.31 9.035 18 12 18Z" /></svg>
                @Activity.Cost.Value.ToString("C2", new CultureInfo(LangCode))
            </span>
        }
    </section>

    <footer class="footer-section">
        <div class="avatars-list">
            @foreach (var user in Activity.ActPersonsName.Split("#", StringSplitOptions.RemoveEmptyEntries))
            {
                <div class="avatar-wrap">
                    <div class="avatar">@Initials(user)</div>
                    <div class="avatar-label" title="@user">@user</div>
                </div>
            }
        </div>

        <div class="ids">
            <span>@Loc["WorkOrder_OrderNo"]@Activity.WorkOrderID</span>
            <span class="dot">•</span>
            <span>@Loc["WorkOrder_Action"] №@Activity.ActivityID</span>
        </div>
    </footer>
</div>

@code {
    [Parameter] public Activity Activity { get; set; } = new();
    [Parameter] public string LangCode { get; set; } = "pl-PL";

    private static string Initials(string name)
    {
        if (string.IsNullOrWhiteSpace(name)) return "?";
        var parts = name.Trim().Split(' ', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
        return new string(parts.Take(2).Select(p => char.ToUpperInvariant(p[0])).ToArray());
    }
}
