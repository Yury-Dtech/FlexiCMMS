@using BlazorTool.Client.Models
@using BlazorTool.Client.Services
@inject ApiServiceClient ApiClient
@inject IStringLocalizer<Resources.UIStrings> Localizer

<div class="activity-list-container">
    <h5>@Localizer["ActivityList_ActivitiesForWorkOrder"] @WorkOrderId.    (@Localizer["ActivityList_TotalWorkload"] @activities?.Sum(x=>x.WorkLoad).ToString("F2") @Localizer["ActivityList_HoursAbbreviation"])</h5>

    @if (activities == null)
    {
        <p><em>@Localizer["ActivityList_LoadingActivities"]</em></p>
    }
    else if (activities.Count == 0)
    {
        <p>@Localizer["ActivityList_NoActivitiesFound"]</p>
    }
    else
    {
        <div class="activity-list-header">
            <span class="activity-category">@Localizer["ActivityList_Category"]</span>
            <span class="activity-description">@Localizer["ActivityList_Description"]</span>
            <span class="activity-workload">@Localizer["ActivityList_Workload"]</span>
            <span class="activity-workers">@Localizer["ActivityList_Workers"]</span>
            <span class="activity-persons">@Localizer["ActivityList_Assigned"]</span>
            <span class="activity-date">@Localizer["ActivityList_Date"]</span>
        </div>
        <div class="activity-list-body">
            @foreach (var activity in activities)
            {

                var personIds = activity.ActPersons.Split('#').Where(x=>!string.IsNullOrWhiteSpace(x));
                var persons = personIds.Select(id => ApiClient.GetPersonByIDCached(int.Parse(id))).ToList();
                <ActivityDisplay ActivityItem="activity" Persons="@persons" OnClick="JoinActivityClickAsync" />
            }
        </div>
    }

    <TelerikWindow @bind-Visible="IsWindowVisible" Modal="true" Width="400px">
        <WindowTitle>
            <strong>@Localizer["WorkOrder_Action"] #@activityId</strong>
        </WindowTitle>
        <WindowActions>
            <WindowAction Name="Close" />
        </WindowActions>
        <WindowContent>
            <JoinToActivityForm ActivityID="@activityId" OnActivityAdded="HandleActivityAdded" />
        </WindowContent>
    </TelerikWindow>
</div>




@code {

    [Parameter]
    public int WorkOrderId { get; set; }

    private List<Activity>? activities;

    private bool IsWindowVisible { get; set; } = false;

    private int activityId = 0;

    protected override async Task OnParametersSetAsync()
    {
        await RefreshActivitiesAsync();
    }

    public async Task RefreshActivitiesAsync()
    {
        if (WorkOrderId > 0)
        {
            activities = null;
            StateHasChanged();
            activities = await ApiClient.GetActivitiesByWO(WorkOrderId);
            if (activities != null)
            {
                activities.Sort((x, y) => x.AddDate.CompareTo(y.AddDate));
            }
            StateHasChanged();
        }
    }

    private void JoinActivityClickAsync(int activityID)
    {
        activityId = activityID;
        IsWindowVisible = true;
    }

    private async Task HandleActivityAdded(bool success)
    {
        if (success)
        {
            IsWindowVisible = false;
            await RefreshActivitiesAsync();
        }
        else
        {
            // Handle the case where joining the activity failed
            Console.WriteLine("Failed to join activity.");
            IsWindowVisible = false;
        }
    }
}
